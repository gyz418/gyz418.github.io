(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{399:function(t,a,e){"use strict";e.r(a);var s=e(42),i=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),e("h3",{attrs:{id:"kex-exchange-identification"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kex-exchange-identification"}},[t._v("#")]),t._v(" kex_exchange_identification")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("connect close by remote host..  \ngithub用ssh方式拉代码\n翻墙占用了github的连接端口22 改为443\n编辑~/.ssh/config文件（没有就新增）\n")])])]),e("p",[t._v("config")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Host github.com\nHostName ssh.github.com\nUser git\nPort 443\n")])])]),e("p",[t._v("验证："),e("code",[t._v("ssh -T git@github.com")])]),t._v(" "),e("p",[t._v("再拉github代码就正常了")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cloud.tencent.com/developer/article/2114329",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"git备用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git备用"}},[t._v("#")]),t._v(" git备用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git config --global url."https://ghproxy.com/https://github.com".insteadOf "https://github.com"\n\ngit config --global --unset https.proxy 取消设置\n\n\ngithub 443超时  私人token\n最后用 wps note.docx里面的 token 当成密码来提交  用户名 gyz418\n\nrsa host key for github.com has changed\n删除 c:/users/administrator/.ssh/known_hosts 文件，会重新生成\n\npack文件 删除大文件  一删除整个git记录就坏了\n上传过大文件，导致pack文件过大\nhttps://blog.csdn.net/sinat_35322593/article/details/124246761\n\n')])])]),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/4d0aeb5ae3bb",target:"_blank",rel:"noopener noreferrer"}},[t._v("解决连接github.com超时异常-- Timed out"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 备用\nnpm config set registry http://registry.npmmirror.com\nnpm config set registry https://registry.npm.taobao.org\nnpm config list\nnpm cache clean 清缓存 （好像无效）\n")])])]),e("h3",{attrs:{id:"github-eve-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-eve-git"}},[t._v("#")]),t._v(" github eve.git")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm ERR! D:\\Git\\mingw64\\bin\\git.EXE ls-remote -h -t git://github.com/adobe-webplatform/eve.git\n\nunable to connect to github.com\n")])])]),e("p",[t._v("解决方式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git config --global url."https://".insteadOf  git://\n')])])]),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/CaptainJava/article/details/104540240",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"git拉github代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git拉github代码"}},[t._v("#")]),t._v(" git拉github代码")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("更新于2023-3-28\nerrno 10054\n解决方法：git config --global http.postBuffer 524288000\n可参考：https://zhuanlan.zhihu.com/p/273370216\n使用git bash来拉代码，有更多错误提示，成功率比webstorm高，使用用户名和wps note.docx里面生成的token作为密码来拉取代码\n\nwebstrom第一次提交github,使用use token，输入上面的token\n\nnvm下载 node 成功 npm 失败\n可直接下载对应版本的 zip包，解压，放下nvm目录下\n\nnvm install node error -- dial tcp 104.20.22.46:443 timeout\nnvm node_mirror https://npm.taobao.org/mirrors/node/\n\nvuepress执行 ./deploy.sh\nPlease make sure you have the correct access rightsand the repository exists\n查看是否有ssh key\nls -al ~/.ssh\n\n# 生成默认 key\nssh-keygen -t rsa -C 'gyz418@126.com' 一直回车\n\n# 查看公钥  .pub（public公钥） 对应没.pub的则是私钥\ncat ~/.ssh/id_rsa.pub\n\n复制到github的ssh keys\n\n")])])]),e("h3",{attrs:{id:"github-timeout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-timeout"}},[t._v("#")]),t._v(" github timeout")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("把你访问过慢的域名复制到这个网站查询对应的ip地址。https://www.ipaddress.com\n添加到host \nC:\\Windows\\System32\\drivers\\etc\n140.82.114.3 github.com\n\nping github.com 可看查是否有响应  解决timeout问题\n")])])]),e("h3",{attrs:{id:"git-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("命令git push origin <tagname>可以推送一个本地标签；\n\n命令git push origin --tags可以推送全部未推送过的本地标签；\n\n命令git tag -d <tagname>可以删除一个本地标签；\n\n命令git push origin :refs/tags/<tagname>可以删除一个远程标签。\n")])])]),e("h3",{attrs:{id:"github拉代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github拉代码"}},[t._v("#")]),t._v(" github拉代码")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("github修改验证方式了，需要token，在wps的note里面有，或者用git bash拉代码，认证一下，比直接用webstorm拉代码验证容易。用webstorm提交代码还是要验证，始终要解决，网络好的话，马上就通过验证了。可能也需要翻墙，具体看情况操作\n")])])]),e("h3",{attrs:{id:"ssh-keygen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-keygen"}},[t._v("#")]),t._v(" ssh-keygen")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://funilrys.com/ssh-private-key-content-do-not-match-public",target:"_blank",rel:"noopener noreferrer"}},[t._v("identity_sign"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("identity_sign: private key ~/.ssh/id_rsa contents do not match public")]),t._v(" "),e("p",[t._v("从私钥重新生成公钥")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("ssh-keygen -y -f /c/Users/Administrator/.ssh/id_rsa "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /c/Users/Administrator/.ssh/id_rsa.pub\n// 再把生成的公钥复制到\n")])])]),e("h3",{attrs:{id:"errno-10054"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#errno-10054"}},[t._v("#")]),t._v(" errno 10054")]),t._v(" "),e("p",[t._v("OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git config --global http.postBuffer 524288000  增大缓存大小\n")])])]),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/273370216",target:"_blank",rel:"noopener noreferrer"}},[t._v("errno 10054"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-key"}},[t._v("#")]),t._v(" ssh key")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('设置\ngit config --global user.name "Your Name"\ngit config --global user.email "email@example.com"\n# 查看\ngit config --global user.name\ngit config --global user.email\n# 查看所有配置\ngit config –list\n# 生成默认 key\nssh-keygen -t rsa -C \'gyz418@126.com\' 一直回车\n# 查看公钥  .pub（public公钥） 对应没.pub的则是私钥\ncat ~/.ssh/id_rsa.pub\n')])])]),e("h3",{attrs:{id:"ssh-key-其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-key-其他"}},[t._v("#")]),t._v(" ssh key 其他")]),t._v(" "),e("p",[t._v("RPC failed http413")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("改用 ssh 的方式 push 代码 \ngit remote set-url origin ssh.git\n")])])]),e("p",[t._v("命名 id_rsa")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('ssh-keygen -t rsa -C "xx@xx.com"  -f ~/.ssh/新名字\n-C 注释  -f 指定密钥文件名\n')])])]),e("p",[t._v("此时需要config文件来指定使用上面的文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Host git.xx.com\nUser git\nIdentityFile ~/.ssh/新名字\nIdentitiesOnly yes\n")])])]),e("h3",{attrs:{id:"github-提交失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-提交失败"}},[t._v("#")]),t._v(" github 提交失败")]),t._v(" "),e("p",[t._v("HttpRequestException encountered")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("解决方案:https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/\n\n这是下载地址,下载第一个安装包就可以了，安装就是直接next而已,重新push发现就可以了\n参考：https://huangkongshenghugh.gitee.io/posts/errorauthentication/\n")])])]),e("h3",{attrs:{id:"git地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git地址"}},[t._v("#")]),t._v(" git地址")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n")])])]),e("h3",{attrs:{id:"git修改远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git修改远程仓库"}},[t._v("#")]),t._v(" git修改远程仓库")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin xxx.git\n// "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" 和 http 链接很不一样，注意了\n")])])]),e("p",[t._v("webstorm拉代码 ctrl+t 会自动化命令执行 git stash \\ git pull \\ git stash pop三连招")]),t._v(" "),e("h3",{attrs:{id:"git-push-失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push-失败"}},[t._v("#")]),t._v(" git push 失败")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin https://username:passwd@xxx.git\n")])])]),e("h3",{attrs:{id:"git-配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-配置"}},[t._v("#")]),t._v(" git 配置")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --list \n")])])]),e("h3",{attrs:{id:"git-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),e("ol",[e("li",[t._v("撤销上次提交git reset --soft HEAD~1，代码会保留   git reset --hard HEAD~1 代码不保留")]),t._v(" "),e("li",[t._v("git push origin master --force(需要输入git账号密码) 代码撤回后，再推送远程，之前的提交记录就没了，")]),t._v(" "),e("li",[t._v("改完代码再正常提交")])]),t._v(" "),e("blockquote",[e("p",[t._v("撤回老版本后，又可以再撤回新版本")])]),t._v(" "),e("ul",[e("li",[t._v("git reset –hard HEAD~ 撤回上个版本")]),t._v(" "),e("li",[t._v("git reset –hard 版本id 版本id 从 git log 中获取，可只获取一小段id 没啥用")]),t._v(" "),e("li",[t._v("git reflog 操作记录")])]),t._v(" "),e("ol",[e("li",[t._v("假设已有版本10，撤回版本6：git reset –hard 版本6，")]),t._v(" "),e("li",[t._v("想回到版本10，可git pull,也可git reset –hard 版本10， 版本10的id从 git reflog中找")])]),t._v(" "),e("ul",[e("li",[t._v("git push origin master 同步远程仓库。。多了这一块，其他人才能看到最新代码")])]),t._v(" "),e("h3",{attrs:{id:"git-revert"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" git revert")]),t._v(" "),e("p",[t._v("线上版本 1 2 3")]),t._v(" "),e("p",[t._v("git revert是用一次新的commit来回滚之前的commit， 回滚1的代码，版本2 3 不受影响")]),t._v(" "),e("p",[t._v("git reset是直接删除指定的commit， 回滚1的代码  版本 2 3的代码全没了。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.51cto.com/article/701000.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"git-url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-url"}},[t._v("#")]),t._v(" git url")]),t._v(" "),e("ul",[e("li",[t._v("https://github.com/gyz418/gyz418.github.io.git")]),t._v(" "),e("li",[t._v("https://github.com/gyz418/test.git")])]),t._v(" "),e("h3",{attrs:{id:"安装git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装git"}},[t._v("#")]),t._v(" 安装git")]),t._v(" "),e("ol",[e("li",[t._v("安装时 取消Enable Git Credential Manager，该工具默认缓存git账号和密码 取消后方便切换用户")]),t._v(" "),e("li",[t._v("git credential-manager remove 停止使用管理工具")]),t._v(" "),e("li",[t._v("git credential-manager delete 清除保存的密码")]),t._v(" "),e("li",[t._v("git --version")])]),t._v(" "),e("h3",{attrs:{id:"开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[t._v("#")]),t._v(" 开始")]),t._v(" "),e("p",[t._v("创建本地仓库 (工作区-> 暂存区-> 版本库)")]),t._v(" "),e("ol",[e("li",[t._v("桌面-> git bash here")]),t._v(" "),e("li",[t._v("mkdir mygit")]),t._v(" "),e("li",[t._v("git init 初始化")]),t._v(" "),e("li",[t._v("ls -a 查看隐藏文件")]),t._v(" "),e("li",[t._v("clear 清屏")]),t._v(" "),e("li",[t._v("git status")]),t._v(" "),e("li",[t._v("git add x.js 添加文件到缓存区")]),t._v(" "),e("li",[t._v("git commit -m “注释” 缓存区提交到版本库\n"),e("ul",[e("li",[t._v("git commit -a -m '注释' 修改过的文件才能同时加缓存区并提交到版本库，新文件不行，要先git add")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("以上是本地仓库，最终要提交到远程仓库,才能共享; 方法是需要添加远程仓库再推送等，比较麻烦")])]),t._v(" "),e("blockquote",[e("p",[t._v("一般是拉远程仓库的代码下来 git clone xx.git")])]),t._v(" "),e("h3",{attrs:{id:"拉代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉代码"}},[t._v("#")]),t._v(" 拉代码")]),t._v(" "),e("p",[t._v("git clone xx.git")]),t._v(" "),e("p",[t._v("###设置git用户的名称和邮箱\n会在电脑上当前用户的路径生成 C:/Users/Administrator/.git/config")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("git config –global user.name “Your Name”")])]),t._v(" "),e("li",[e("p",[t._v("git config –global user.email “email@example.com“ github上收邮件用")])])]),t._v(" "),e("p",[t._v("###git 工作区、暂存区、版本库")]),t._v(" "),e("ul",[e("li",[t._v("工作区：开发区")]),t._v(" "),e("li",[t._v("暂存区（比svn多出来一个暂存区）")]),t._v(" "),e("li",[t._v("版本库")])]),t._v(" "),e("h3",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),e("ol",[e("li",[t._v("untracked files 未跟踪的文件（新文件、工作区文件）")]),t._v(" "),e("li",[t._v("changes to be committed 暂存区的文件")]),t._v(" "),e("li",[t._v("changes not staged for commit 工作区文件")])]),t._v(" "),e("h3",{attrs:{id:"git-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-命令"}},[t._v("#")]),t._v(" git 命令")]),t._v(" "),e("p",[t._v("git status 查看当前文件状态")]),t._v(" "),e("p",[t._v("###git 添加 提交")]),t._v(" "),e("ul",[e("li",[t._v("git add x.js 添加文件到缓存区")]),t._v(" "),e("li",[t._v("git add . 添加所有文件到缓存区")]),t._v(" "),e("li",[t._v("git commit -m “注释” 提交到版本库")]),t._v(" "),e("li",[t._v("git commit -a -m “注释” 直接把修改的文件提交到工作区（ -a 是 add 的简写）")])]),t._v(" "),e("h3",{attrs:{id:"git-记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-记录"}},[t._v("#")]),t._v(" git 记录")]),t._v(" "),e("ul",[e("li",[t._v("git log 查看提交记录（最新记录在最上面） 如果记录太多 可以按 回车键查看其他记录 退出 按 Q")]),t._v(" "),e("li",[t._v("gitk 以图形界面显示提交记录")])]),t._v(" "),e("h3",{attrs:{id:"git-文件对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-文件对比"}},[t._v("#")]),t._v(" git 文件对比")]),t._v(" "),e("ul",[e("li",[t._v("git diff 查看工作区和暂存区的对比，用绿色显示出来（用处不大）")]),t._v(" "),e("li",[t._v("git diff -cached（–stage） 暂存区和版本库的对比")]),t._v(" "),e("li",[t._v("git diff master 工作区与版本库的差异 （用处不大）")])]),t._v(" "),e("h3",{attrs:{id:"git-代码撤消"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-代码撤消"}},[t._v("#")]),t._v(" git 代码撤消")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("git reset HEAD a.js 把暂存区的代码撤回工作区（在webstorm看不出任何差别）")])]),t._v(" "),e("li",[e("p",[t._v("git checkout a.js 撤消工作区的代码，跟版本库代码一致（webstorm 撤消文件的修改 Verson Control-> Default a.js — Revert）")])]),t._v(" "),e("li",[e("p",[t._v("git commit -m “xx” –amend")]),t._v(" "),e("ul",[e("li",[t._v("1.撤消上一次的版本库提交，变成两个分支 要 git pull 合并远程代码到自己的版本 再 git push 推送到远程")]),t._v(" "),e("li",[t._v("2.代码没改动时，修改提交的注释")])])])]),t._v(" "),e("h3",{attrs:{id:"git-删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-删除"}},[t._v("#")]),t._v(" git 删除")]),t._v(" "),e("ul",[e("li",[t._v("git rm -f a.txt 删除工作区文件、暂存区文件")]),t._v(" "),e("li",[t._v("git rm –cached a.txt 保留本地文件、删除工作区、暂存区文件（类似文件撤消 Revert）")]),t._v(" "),e("li",[t._v("删除版本库的文件，产生暂存区 要提交后才能真正的删除 git rm xx")]),t._v(" "),e("li",[t._v("把暂存区文件退回工作区 git rm –cached xx")]),t._v(" "),e("li",[t._v("工作区的新文件只能手动删除。。")])]),t._v(" "),e("h3",{attrs:{id:"git-代码合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-代码合并"}},[t._v("#")]),t._v(" git 代码合并")]),t._v(" "),e("p",[t._v("远程仓库：origin/master")]),t._v(" "),e("ul",[e("li",[t._v("git fetch 拉代码 手动合并")]),t._v(" "),e("li",[t._v("git diff master origin/master 红色是本地的，绿色是原程的")]),t._v(" "),e("li",[t._v("git merge origin/master 合并冲突文件，要本地手动修改代码 先显示本地，再显示远程的")]),t._v(" "),e("li",[t._v("git pull 拉代码自动合并（上面三步简成一步，都要手动解决冲突）")]),t._v(" "),e("li",[t._v("git commit -a -m ‘xxx’ 再提交")]),t._v(" "),e("li",[t._v("git push 推送远程")])]),t._v(" "),e("h3",{attrs:{id:"git-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-分支"}},[t._v("#")]),t._v(" git 分支")]),t._v(" "),e("ul",[e("li",[t._v("git branch 查看分支")]),t._v(" "),e("li",[t._v("git branch 2.0 新建分支")]),t._v(" "),e("li",[t._v("git checkout 2.0 切换分支")]),t._v(" "),e("li",[t._v("git checkout -b 3.0 新建并切换分支")]),t._v(" "),e("li",[t._v("git merge 2.0 在master分支的基础上，把2.0分支合并过来（还没git push）")]),t._v(" "),e("li",[t._v("git branch -d 2.0 合并后，把2.0删除\n"),e("ul",[e("li",[t._v("git branch -D 3.0 强制删除未合并分支")])])]),t._v(" "),e("li",[t._v("git branch –merged 在master分支上 查看合并的分支")]),t._v(" "),e("li",[t._v("git branch –no-merged 在master分支上 查看没合并的分支")])]),t._v(" "),e("h3",{attrs:{id:"合并冲突分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并冲突分支"}},[t._v("#")]),t._v(" 合并冲突分支")]),t._v(" "),e("p",[t._v("git merge 4.0 在 master分支上 直接合并分支 再手动修改")]),t._v(" "),e("h3",{attrs:{id:"提交分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交分支"}},[t._v("#")]),t._v(" 提交分支")]),t._v(" "),e("p",[t._v("git push origin 5.0")]),t._v(" "),e("h3",{attrs:{id:"git-标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-标签"}},[t._v("#")]),t._v(" git 标签")]),t._v(" "),e("ul",[e("li",[t._v("git tag 1.0")]),t._v(" "),e("li",[t._v("git push origin 1.0 github 生成 release版本")])]),t._v(" "),e("p",[t._v("###git 在线文档\n"),e("a",{attrs:{href:"http://git.oschina.net/progit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("git文档"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("百度搜索“git教程” 有一个廖雪峰的git")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰git"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰git"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"git-bash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-bash"}},[t._v("#")]),t._v(" git-bash")]),t._v(" "),e("ul",[e("li",[t._v("pwd 当前路径")]),t._v(" "),e("li",[t._v("ls\n"),e("ul",[e("li",[t._v("ls -a 查看隐藏文件")])])]),t._v(" "),e("li",[t._v("clear 清屏")]),t._v(" "),e("li",[t._v("rmdir 只能删除空目录")]),t._v(" "),e("li",[t._v("rm\n"),e("ul",[e("li",[t._v("rm 文件名")]),t._v(" "),e("li",[t._v("rm -rf 目录名 删除非空目录")])])]),t._v(" "),e("li",[t._v("cd .. 后退(有空格)")]),t._v(" "),e("li",[t._v("touch a.html 创建文件")]),t._v(" "),e("li",[t._v("vi a.html 打开文件")])]),t._v(" "),e("h3",{attrs:{id:"vi-操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vi-操作"}},[t._v("#")]),t._v(" vi 操作")]),t._v(" "),e("p",[t._v("git-bash有些bug，建议虚拟机装linux系统用vi的增强版 vim")]),t._v(" "),e("ul",[e("li",[t._v("i 编辑状态")]),t._v(" "),e("li",[t._v("esc 退出编辑")]),t._v(" "),e("li",[t._v(":wq 保存退出\n"),e("ul",[e("li",[t._v(":q! 强制退出不保存修改")]),t._v(" "),e("li",[t._v(":q 退出vi")]),t._v(" "),e("li",[t._v(":w 保存编辑")])])]),t._v(" "),e("li",[t._v("cat：查看文件")]),t._v(" "),e("li",[t._v("less：查看大文本文件 按 q 退出 空格 翻页 b 上一页 git log 会自动进入less模式")]),t._v(" "),e("li",[t._v("dd 剪切行")]),t._v(" "),e("li",[t._v("p 粘贴行")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2012/07/git.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git分支管理策略"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/12/git-workflow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 工作流程"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"git-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-flow"}},[t._v("#")]),t._v(" git flow")]),t._v(" "),e("blockquote",[e("p",[t._v("工作流 长期 master、develop两分支")])]),t._v(" "),e("blockquote",[e("p",[t._v("一般由项目经理、技术经理处理，多人开发才用到")])]),t._v(" "),e("ul",[e("li",[t._v("只有一个master分支")]),t._v(" "),e("li",[t._v("开发时创建 develop 分支，最后要合并到master分支再发布 git merge --no-ff develop")]),t._v(" "),e("li",[t._v("临时分支 多人合作时创建，最后合并到master分支，再删除\n"),e("ul",[e("li",[t._v("feature-login 功能分支")]),t._v(" "),e("li",[t._v("release-1.1 预发布分支")]),t._v(" "),e("li",[t._v("fixbug-bugname bug分支")])])])]),t._v(" "),e("h3",{attrs:{id:"github-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-flow"}},[t._v("#")]),t._v(" github flow")]),t._v(" "),e("p",[t._v("只有一个master分支， 开源项目")]),t._v(" "),e("h3",{attrs:{id:"gitlab-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-flow"}},[t._v("#")]),t._v(" gitlab flow")]),t._v(" "),e("ol",[e("li",[t._v("只有一个master开发分支，")]),t._v(" "),e("li",[t._v("创建预发布分支pre-production，由master推送到pre-production")]),t._v(" "),e("li",[t._v("创建生产分支production，由预发布推送到生产")])]),t._v(" "),e("p",[t._v("###gitlab")]),t._v(" "),e("ol",[e("li",[t._v("gitlab 是开源的类似github的系统，开源免费部署到自己的公司内容，需要安装到Linux")]),t._v(" "),e("li",[t._v("码云是第三方的")])]),t._v(" "),e("p",[t._v("###github\nnew repository 添加一个仓库")]),t._v(" "),e("p",[t._v("###github 创建个人博客\n创建时,名字跟gitHub用户名一样 gyz418.github.io")]),t._v(" "),e("p",[t._v("###github 设置别名\ngit config –global alias.co checkout git co 2.0 => git checkout 2.0")]),t._v(" "),e("h3",{attrs:{id:"hexo-博客框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hexo-博客框架"}},[t._v("#")]),t._v(" hexo 博客框架")]),t._v(" "),e("ol",[e("li",[t._v("yarn global add hexo-cli 全局安装")]),t._v(" "),e("li",[t._v("hexo init blog 初始化")]),t._v(" "),e("li",[t._v("hexo server 本地服务 http://localhost:4000")]),t._v(" "),e("li",[t._v("hexo new git 创建md文件")]),t._v(" "),e("li",[t._v("发布代码\n"),e("ul",[e("li",[t._v("_config.yml 配置 git, repo: https://github.com/gyz418/gyz418.github.io.git 加上用户名 密码")]),t._v(" "),e("li",[t._v("npm install hexo-deployer-git --save")]),t._v(" "),e("li",[t._v("hexo deploy --generate 发布代码")])])]),t._v(" "),e("li",[t._v("更换主题：官网 或 github: hexo theme\n"),e("ul",[e("li",[t._v("cd themes/git clone https://github.com/iissnan/hexo-theme-next.git –depth=1")]),t._v(" "),e("li",[t._v("–depth=1 表示只下载最新代码，不要历史记录版本")])])])]),t._v(" "),e("h3",{attrs:{id:"webstorm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webstorm"}},[t._v("#")]),t._v(" webstorm")]),t._v(" "),e("ol",[e("li",[t._v("webstorm会提示是否添加新文件到git,即Verson control中的 default 代表了git的暂存区 git add xxx，")]),t._v(" "),e("li",[t._v("unversioned files 即未处理。修改的文件默认属于工作区，但webstorm把它添加到了暂存区")])]),t._v(" "),e("p",[t._v("webstorm 分支")]),t._v(" "),e("ul",[e("li",[t._v("黄色是 HEAD 代表当前所处的位置，")]),t._v(" "),e("li",[t._v("绿色是各个分支")]),t._v(" "),e("li",[t._v("紫色是远程分支 origin/master")])]),t._v(" "),e("h3",{attrs:{id:"gyz418-github-io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gyz418-github-io"}},[t._v("#")]),t._v(" gyz418.github.io")]),t._v(" "),e("p",[t._v("github主页，可以删掉重新创建，只要仓库名是gyz418.github.io就可以了")]),t._v(" "),e("h3",{attrs:{id:"vuepress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuepress"}},[t._v("#")]),t._v(" vuepress")]),t._v(" "),e("p",[t._v("vuepress 发布到github主页 Permission denied (publickey)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('cat ~/.ssh/id_rsa.pub   # 查看ssh key，如果有key，会输出\nssh-keygen -t rsa # 生成ssh key\n打开github  网站的"account settings" 依次点击"Setting -> SSH Keys"->"New SSH key", 添加ssh key\n发布到github: . deploy.sh\n')])])]),e("p",[e("a",{attrs:{href:"https://www.zhihu.com/question/21402411",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"删除文件夹-rm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除文件夹-rm"}},[t._v("#")]),t._v(" 删除文件夹 rm")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git: rm -rf xx  \ncmd: rd/s/q xx \n先压缩文件夹并删除压缩的文件，再删除，1000个图片，1分钟搞定\n")])])]),e("h3",{attrs:{id:"git-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),e("p",[t._v("git stash 把代码暂时保存，不提交，")]),t._v(" "),e("p",[t._v("gip stash pop 把保存的代码取出来")]),t._v(" "),e("h3",{attrs:{id:"git大小写问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git大小写问题"}},[t._v("#")]),t._v(" git大小写问题")]),t._v(" "),e("p",[t._v("Git 忽略文件名大小写，因此上传的文件夹如果大小写有问题，本地改动是无法提交的")]),t._v(" "),e("p",[t._v("git config core.ignorecase false")]),t._v(" "),e("h3",{attrs:{id:"重复git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重复git"}},[t._v("#")]),t._v(" 重复git")]),t._v(" "),e("p",[t._v("主项目有一个.git了，使用脚手架vue-cli等创建项目时，会在该目录下生成.git文件夹，作为子项目会冲突,此时需要删除脚手架子项目的.git")])])}),[],!1,null,null,null);a.default=i.exports}}]);